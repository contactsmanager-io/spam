name: Format Check

on:
  pull_request:
    branches: [main]
  push:
    branches: [main]

jobs:
  format-check:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"

      - name: Install dependencies
        run: |
          npm install -g prettier jq

      - name: Check JSON formatting
        run: |
          echo "Checking JSON formatting..."

          # Check if all JSON files are properly formatted
          files_to_check=(
            "patterns/phone-patterns.json"
            "patterns/email-patterns.json" 
            "patterns/domain-patterns.json"
            "blocklists/phone-numbers.json"
            "blocklists/email-addresses.json"
            "blocklists/domains.json"
            "schemas/phone-pattern.schema.json"
            "schemas/email-pattern.schema.json"
            "schemas/phone-blocklist.schema.json"
            "schemas/email-blocklist.schema.json"
            "schemas/domain-blocklist.schema.json"
          )

          formatting_issues=false

          for file in "${files_to_check[@]}"; do
            if [ -f "$file" ]; then
              echo "Checking formatting of $file..."
              
              # Check if file is valid JSON
              if ! jq empty "$file" 2>/dev/null; then
                echo "❌ $file contains invalid JSON"
                formatting_issues=true
                continue
              fi
              
              # Check if file is properly formatted (2-space indentation)
              formatted_content=$(jq --indent 2 . "$file")
              original_content=$(cat "$file")
              
              if [ "$formatted_content" != "$original_content" ]; then
                echo "❌ $file is not properly formatted"
                echo "Expected format:"
                echo "$formatted_content" | head -10
                echo "..."
                formatting_issues=true
              else
                echo "✅ $file is properly formatted"
              fi
            else
              echo "⚠️  $file not found, skipping..."
            fi
          done

          if [ "$formatting_issues" = true ]; then
            echo ""
            echo "❌ Formatting issues found. Please run 'jq --indent 2 . file.json > temp && mv temp file.json' to fix formatting."
            exit 1
          fi

          echo "✅ All JSON files are properly formatted"

      - name: Check for required fields
        run: |
          echo "Checking for required fields..."

          # Check that all files have version and last_updated
          required_check=true

          for file in patterns/*.json blocklists/*.json; do
            if [ -f "$file" ]; then
              echo "Checking required fields in $file..."
              
              version=$(jq -r '.version // empty' "$file")
              last_updated=$(jq -r '.last_updated // empty' "$file")
              
              if [ -z "$version" ]; then
                echo "❌ $file missing 'version' field"
                required_check=false
              fi
              
              if [ -z "$last_updated" ]; then
                echo "❌ $file missing 'last_updated' field"
                required_check=false
              fi
              
              # Check version format (semantic versioning)
              if [[ ! $version =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
                echo "❌ $file has invalid version format: $version (expected: X.Y.Z)"
                required_check=false
              fi
              
              # Check date format
              if [[ ! $last_updated =~ ^[0-9]{4}-[0-9]{2}-[0-9]{2}$ ]]; then
                echo "❌ $file has invalid date format: $last_updated (expected: YYYY-MM-DD)"
                required_check=false
              fi
            fi
          done

          if [ "$required_check" = false ]; then
            echo "❌ Required field validation failed"
            exit 1
          fi

          echo "✅ All required fields are present and valid"
